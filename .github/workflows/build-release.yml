name: Build and Release

on:
  push:
    tags: ['v*']
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
        type: string

jobs:
  build:
    strategy:
      matrix:
        pg_version: [15]
        os: [ubuntu-24.04]
    
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install PostgreSQL APT repository
        run: |
          sudo apt-get update
          sudo apt-get install -y wget ca-certificates
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
          sudo apt-get update
      
      - name: Install dependencies
        run: |
          sudo apt-get install -y \
            cmake \
            libcurl4-openssl-dev \
            uuid-dev \
            postgresql-${{ matrix.pg_version }} \
            postgresql-server-dev-${{ matrix.pg_version }} \
            pkg-config
      
      - name: Build extension (Release mode)
        run: |
          mkdir build
          cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DPG_CONFIG=/usr/lib/postgresql/${{ matrix.pg_version }}/bin/pg_config
          make -j$(nproc)
      
      - name: Package artifacts
        run: |
          cd build
          mkdir -p package
          make install DESTDIR=$(pwd)/package
          tar -czf ../clickhouse_fdw-pg${{ matrix.pg_version }}-${{ matrix.os }}.tar.gz \
            -C package/usr/lib/postgresql/${{ matrix.pg_version }} . \
            -C ../../../usr/share/postgresql/${{ matrix.pg_version }}/extension .
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: clickhouse_fdw-pg${{ matrix.pg_version }}-${{ matrix.os }}
          path: "*.tar.gz"

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: "**/*.tar.gz"
          generate_release_notes: true
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
